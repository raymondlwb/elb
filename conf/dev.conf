worker_processes  1;

error_log stderr notice;

events {
    worker_connections 1024;
}

daemon off;

env REDIS_HOST;
env REDIS_PORT;

http {
    default_type application/json;
    log_format eru-lb '$host '
                      '$remote_addr [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" '
                      '$request_time '
                      '$upstream_response_time '
                      '$http_x_forwarded_for';

    sendfile        on;
    access_log      off;

    client_max_body_size      500m;
    client_body_buffer_size   256k;
    client_header_timeout     3m;
    client_body_timeout       3m;
    send_timeout              3m;
    tcp_nopush     on;
    tcp_nodelay    on;
    keepalive_timeout  65;
    underscores_in_headers on;
    ignore_invalid_headers off;

    gzip  on;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      '';
    }

    lua_socket_log_errors off;
    lua_check_client_abort on;
    lua_package_path "$prefix../?.lua;;";
    lua_shared_dict servernames 20m;
    lua_shared_dict analysis 20m;
    init_by_lua_block {
        local lrucache = require "resty.lrucache"
        cjson = require "cjson"
        cache = lrucache.new(200)
        if not cache then
            ngx.exit(ngx.HTTP_BAD_REQUEST)
        end
    }

    dyups_shm_zone_size 20m;
    dyups_trylock on;

    server {
        listen 8080;

        underscores_in_headers on;
        ignore_invalid_headers off;

        rewrite ^/(.*)/favicon.ico$ /favicon.ico last;
        location ~* (favicon.ico) {
            log_not_found off;
            break;
        }

        set $backend '';
        location ~ ^/ {
            proxy_set_header X-Real-IP $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header HOST $host;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_buffer_size 256k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            proxy_temp_file_write_size 256k;
            proxy_read_timeout 600;
            proxy_next_upstream error timeout invalid_header http_500 http_503 http_404;

            access_log /dev/stdout eru-lb;
            error_log stderr error;

            access_by_lua_file ../app.lua;
            log_by_lua_file ../log.lua;
            proxy_pass http://$backend;
        }

        location ^~ /domain {
            content_by_lua_file ../domain.lua;
        }

        location ^~ /upstream {
            dyups_interface;
            content_by_lua_file ../upstream.lua;
        }

        location ^~ /status {
            content_by_lua_file ../status.lua;
        }

        location ^~ /analysis {
            content_by_lua_file ../analysis.lua;
        }
    }

    server {
        listen 8088;
        location / {
            return 200 "8088";
        }
    }

    server {
        listen 8089;
        location / {
            return 200 "8089";
        }
    }
}
