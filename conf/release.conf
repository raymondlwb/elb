worker_processes  auto;
worker_rlimit_nofile 20480;

error_log stderr notice;

events {
    worker_connections 102400;
}

daemon off;

env REDIS_HOST;
env REDIS_PORT;
env ELBNAME;
env STATSD_HOST;
env STATSD_PORT;
env ERU_INFO;

http {
    include mime.types;
    default_type application/json;
    log_format eru-lb '{'
                      '"host": "$host", '
                      '"remote_addr": "$remote_addr", "time_local": "$time_local", '
                      '"request": "$request", "status": "$status",  "body_bytes_sent": "$body_bytes_sent", '
                      '"http_referer": "$http_referer", "http_user_agent": "$http_user_agent", '
                      '"request_time": "$request_time", '
                      '"upstream_response_time": "$upstream_response_time", '
                      '"http_x_forwarded_for": "$proxy_add_x_forwarded_for", '
                      '"uri": "$uri", '
                      '"args": "$args", '
                      '"upstream_addr": "$upstream_addr", '
                      '"upstream_status": "$upstream_status"'
                      '}';

    sendfile        on;
    access_log      off;

    client_max_body_size      500m;
    client_body_buffer_size   256k;
    client_header_timeout     3m;
    client_body_timeout       3m;
    send_timeout              3m;
    tcp_nopush                on;
    tcp_nodelay               on;
    keepalive_timeout         65;
    underscores_in_headers    on;
    ignore_invalid_headers    off;
    # must define resolver, or else nginx couldn't resolve shit
    # see http://serverfault.com/questions/638822/nginx-resolver-address-from-etc-resolv-conf
    resolver                  127.0.0.1;

    real_ip_header "X-Forwarded-For";
    set_real_ip_from 10.0.0.0/8;
    real_ip_recursive on;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      '';
    }

    lua_socket_log_errors off;
    lua_check_client_abort on;
    lua_package_path "$prefix../?.lua;;";

    lua_shared_dict locks 15k;
    lua_shared_dict rules 20m;
    lua_shared_dict monitor 10m;

    init_by_lua_file ../init/init_var.lua;
    init_worker_by_lua_file ../init/init_worker.lua;

    dyups_shm_zone_size 20m;
    dyups_trylock on;


    server {
        listen 80;

        underscores_in_headers on;
        ignore_invalid_headers off;
        log_not_found off;

        location ~* (favicon.ico) {
            break;
        }

        set $backend '';

        # APIs
        location ~ ^/__erulb__/(\w+)$ {
            dyups_interface;

            # 开放内网连接, 其他全部拒绝
            allow 10.10.0.0/16;
            allow 10.210.0.0/16;
            allow 10.100.0.0/16;
            allow 10.101.0.0/16;
      	    allow 10.215.240.0/20;
            allow 127.0.0.1;
            deny all;

            content_by_lua_file ../api/$1.lua;
        }

        # proxy
        location ~ ^/ {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header HOST $host;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_buffer_size 256k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            proxy_temp_file_write_size 256k;
            proxy_read_timeout 30;
            proxy_next_upstream error timeout invalid_header http_500 http_504;
            proxy_next_upstream_tries 3;

            access_log syslog:server=localhost:51442 eru-lb;
            error_log stderr error;

            access_by_lua_file ../access.lua;
            log_by_lua_file ../log.lua;
            proxy_pass http://$backend;
        }

    }
}
